version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.4

jobs:
  build:
    docker:
      - image: circleci/golang:1.8
    environment:
      DB_URI: $'DB_URI'
      PORT: $PORT
      HOST: $HOST
      SECRET_KEY: $SECRET_KEY
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build -t cicd-test .
            docker tag cicd-test:latest 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest
      - persist_to_workspace:
          root: .
          paths: 
            - docker-image
  push_image:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - attach_workspace:
          at: workspace
      - setup_remote_docker
      - run:
          name: Load image from archive
          command: docker load -i workspace/docker-image/image.tar
      - run:
          name: push image
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 046504469503.dkr.ecr.us-east-1.amazonaws.com  
            docker push 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest

  run-image-as-Container:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "SHA256:5Gw2sTNMNrlI7TxOnXKwwZYCjb5/pKoaalOhHmqapTs"
          name: test-key.pem
          private_key: $YOUR_PRIVATE_KEY  
      - run:
          name: Rollback changes
          command: |
            sudo apt update
            sudo apt-get install ansible -y
            cd .circleci/ansible    
            ansible-playbook rollback.yml -i inventory.txt
      - run:
          name: Deploy Container
          command: |
            cd .circleci/ansible
            ansible-playbook deploy_container.yml -i inventory.txt

workflows:
  build-push:
    jobs:
      # - build
      # - push_image:
      #     requires:
      #       - build
      - run-image-as-Container
          # requires:
          #   - push_image
