version: 2.1
# commands:
#   configure_awscli:
#     description: Configure AWS credentials
#     steps:
#       - run:
#           name: Configure AWS CLI
#           command: |
#             aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
#             aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
#             aws configure set default.region us-east-1

#   install_docker:
#     description: Install docker and its packages
#     steps:
#       - run:
#           name: Install Docker
#           command: |
#             sudo mkdir -p /etc/apt/keyrings
#             curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#             echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#             sudo apt update
#             sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
#             sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#             sudo chmod +x /usr/local/bin/docker-compose

# jobs:
#   build-image-and-push-to-ecr:
#     machine: 
#       image: ubuntu-2204:2022.04.2
#     environment:
#       DB_URI: $DB_URI
#       PORT: $PORT
#       HOST: $HOST
#       SECRET_KEY: $SECRET_KEY
#     steps:
#       - checkout 
#       - configure_awscli
#       - run:
#           name: Login build and push to ECR
#           command: |
#             aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 992382803030.dkr.ecr.us-east-1.amazonaws.com
#             docker build -t 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest . 
#             docker push 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest

#   Run-image-as-Container:
#     machine:
#       image: ubuntu-2204:2022.04.2
#     steps:
#       - checkout
#       - add_ssh_keys:
#           fingerprints:
#             - "SHA256:5Gw2sTNMNrlI7TxOnXKwwZYCjb5/pKoaalOhHmqapTs"
#           name: test-key.pem
#           private_key: $YOUR_PRIVATE_KEY
#       - run:
#           name: Pull image from ECR
#           command: |
#             docker pull 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest
#       - run:
#           name: Deploy Container
#           command: |
#             cat .circleci/ansible/inventory.txt
#             cd .circleci/ansible
#             ansible-playbook deploy_container.yml

# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build-image-and-push-to-ecr
#       - Run-image-as-Container:
#           requires:
#             - build-image-and-push-to-ecr

orbs:
  aws-cli: circleci/aws-cli@0.1.4

jobs:
  build:
    docker:
      - image: circleci/golang:1.8
    environment:
      DB_URI: $DB_URI
      PORT: $PORT
      HOST: $HOST
      SECRET_KEY: $SECRET_KEY
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            docker build -t cicd-test .
            docker tag cicd-test:latest 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest
      - persist_to_workspace:
          root: .
          paths: 
            - docker-image
  push_image:
    docker:
      - image: cimg/aws:2024.03
    # environment:
    #   AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      # - setup_remote_docker
      - attach_workspace:
          at: workspace
      # - aws-cli/install
      # - aws-cli/configure:
      #     aws-access-key-id: "$AWS_ACCESS_KEY_ID"
      #     aws-secret-access-key: "$AWS_SECRET_ACCESS_KEY"
      #     aws-region: "$AWS_REGION"
      - run:
          name: push image
          command: |
            eval $(aws ecr get-login --region us-east-1 --no-include-email)
            docker push 046504469503.dkr.ecr.us-east-1.amazonaws.com/cicd-test:latest

workflows:
  build-push:
    jobs:
      - build
      - push_image:
          requires:
            - build
